package javaStudy.ch13;

public class Ex13_1 {
    /**
     * 람다식
     * - 함수형 프로그래밍을 구성하기 위한 함수식이며, 자바의 메소드를 간결한 함수 식으로 표현
     *
     * 작성방법
     * - 1. 메소드의 이름과 반환타입을 제거하고 '->'를 {}앞에 추가
     * - 2. 반환값이 있는 경우, 식이나 값만 적고 return문 생략 가능
     * - 3. 매개변수 타입 추론가능하면 생략가능
     *
     * 주의사항
     * - 1.매개변수가 하나인 경우, () 생략가능(타입이 없을때)
     * - 2.블록 안의 문장이 하나뿐 일 때, {} 생략 가능(끝에 ‘;’  안 붙임)
     * - 3.단, 하나 뿐인 문장이 return문이면 괄호{} 생략 불가능
     */

    int a, b;

    int add(int a, int b) {
        return a + b;
    }

    // 1. 메소드의 이름과 반환타입을 제거하고 '->'를 {}앞에 추가
    // (a, b) -> a+b;
    // x x*x;

    // 2.반환값이 있는 경우, 식이나 값만 적고 return문 생략 가능
    // () -> (int)(Math.random*6);

    // 3. 매개변수 타입 추론가능하면 생략가능
    // (name, i) -> System.out.println(name+"="+i);

    // 주의사항
    // 1.매개변수가 하나인 경우, () 생략가능(타입이 없을때)
    // a -> a*a;

    // 2.블록 안의 문장이 하나뿐 일 때, {} 생략 가능(끝에 ‘;’  안 붙임)
    // (int i) -> System.out.println(i);

    // 3.단, 하나 뿐인 문장이 return문이면 괄호{} 생략 불가능
    // (int a, int b) -> return a+b;
}
